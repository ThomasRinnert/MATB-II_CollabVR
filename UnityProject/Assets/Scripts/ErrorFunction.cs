using System;

public static class ErrorFunction //https://www.johndcook.com/blog/csharp_erf/
{
    public static double erf(double x)
    {
        // constants
        double a1 = 0.254829592;
        double a2 = -0.284496736;
        double a3 = 1.421413741;
        double a4 = -1.453152027;
        double a5 = 1.061405429;
        double p = 0.3275911;
    
        // Save the sign of x
        int sign = 1;
        if (x < 0)
            sign = -1;
        x = Math.Abs(x);
    
        // A&S formula 7.1.26
        double t = 1.0 / (1.0 + p*x);
        double y = 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*Math.Exp(-x*x);
    
        return sign*y;
    }
    
    public static double TestErf()
    {
        // Select a few input values
        double[] x = 
        {
            0.00, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90,
            1.00, 1.10, 1.20, 1.30, 1.40, 1.50, 1.60, 1.70, 1.80, 1.90,
            2.00, 2.10, 2.20, 2.30, 2.40, 2.50, 2.60, 2.70, 2.80, 2.90,
            -0.00,-0.10,-0.20,-0.30,-0.40,-0.50,-0.60,-0.70,-0.80,-0.90,
            -1.00,-1.10,-1.20,-1.30,-1.40,-1.50,-1.60,-1.70,-1.80,-1.90,
            -2.00,-2.10,-2.20,-2.30,-2.40,-2.50,-2.60,-2.70,-2.80,-2.90
        };
    
        // Output computed by scipy
        // y = Erf[x]
        double[] y = 
        { 
            0.0,          0.11246292,  0.22270259,  0.32862676,  0.42839236,  0.52049988,  0.60385609,  0.67780119,  0.74210096,  0.79690821,
            0.84270079,  0.88020507,  0.91031398,  0.93400794,  0.95228512,  0.96610515,  0.97634838,  0.98379046,  0.9890905,   0.99279043,
            0.99532227,  0.99702053,  0.99813715,  0.99885682,  0.99931149,  0.99959305,  0.99976397,  0.99986567,  0.99992499,  0.9999589,
            -0.0,         -0.11246292, -0.22270259, -0.32862676, -0.42839236, -0.52049988, -0.60385609, -0.67780119, -0.74210096, -0.79690821,
            -0.84270079, -0.88020507, -0.91031398, -0.93400794, -0.95228512, -0.96610515, -0.97634838, -0.98379046, -0.9890905,  -0.99279043,
            -0.99532227, -0.99702053, -0.99813715, -0.99885682, -0.99931149, -0.99959305, -0.99976397, -0.99986567, -0.99992499, -0.9999589
        };
    
        double maxError = 0.0;
        for (int i = 0; i < x.Length; ++i)
        {
            double error = Math.Abs(y[i] - erf(x[i]));
            if (error > maxError)
                maxError = error;
        }
    
        return maxError;
    }
}